name: Build and Publish GoBGP (daily)

on:
  schedule:
    - cron: "0 12 * * *" # 毎日12:00
  workflow_dispatch:

concurrency:
  group: gobgp-build-publish
  cancel-in-progress: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest GoBGP release tag
        id: gettag
        uses: pozetroninc/github-action-get-release@v0.8.0
        with:
          repository: osrg/gobgp
          token: ${{ secrets.GITHUB_TOKEN }}

      # キャッシュにヒットするかどうかで最新バージョンに追従できているかを見る
      - name: Restore version cache (by tag)
        id: version_cache
        uses: actions/cache/restore@v4
        with:
          path: .gobgp-version-cache
          key: gobgp-tag-${{ steps.gettag.outputs.release }}

      - name: Build and push (if changed)
        if: steps.version_cache.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: goBGP/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            BUILD_VERSION=${{ steps.gettag.outputs.release }}
          tags: |
            ghcr.io/masebb/gobgp:${{ steps.gettag.outputs.release }}
            ghcr.io/masebb/gobgp:latest

      - name: Mark and save version cache
        if: steps.version_cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p .gobgp-version-cache
          echo ok > .gobgp-version-cache/marker

      - name: Persist version cache
        if: steps.version_cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: .gobgp-version-cache
          key: gobgp-tag-${{ steps.gettag.outputs.release }}

      - name: Skip (cached)
        if: steps.version_cache.outputs.cache-hit == 'true'
        run: echo "Cached for version ${{ steps.gettag.outputs.release }}. Skipping build."
